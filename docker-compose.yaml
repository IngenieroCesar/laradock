version: '3.7'

services:
# nginx-proxy #####################
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/ssl/certs:/etc/nginx/certs:ro
      - ./nginx/ssl/vhostd:/etc/nginx/vhost.d
      - ./nginx/ssl/html:/usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    networks:
      - app-network
      - app-network2

# #letsencript
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    depends_on:
      - nginx-proxy
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - ./nginx/ssl/certs:/etc/nginx/certs:rw
      - ./nginx/ssl/vhostd:/etc/nginx/vhost.d
      - ./nginx/ssl/html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - app-network

 #MySQL Service
  mysql:
    depends_on:
      - nginx-proxy
    image: mysql:5.7.22
    container_name: mysql
    restart: always
    tty: true
    ports:
      # - "3306:3306"
      - "3306"
    environment:
      MYSQL_DATABASE: admiapp
      MYSQL_ROOT_PASSWORD: your_mysql_root_password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
      MYSQL_USER: user
      MYSQL_PASSWORD: mysql_password
    volumes:
      - ./mysql/dbdata/:/var/lib/mysql/
      - ./mysql/my.cnf/:/etc/mysql/my.cnf
    networks:
      - app-network
      - app-network2

 #PHPMyAdmi Service
  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_PORT: 3306
      PMA_HOST: mysql
      PMA_USER: user
      PMA_PASSWORD: mysql_password
    ports:
        - "8080:80"
    networks:
      - app-network

############## Proyecto AdmiApp ################
#Nginx Service
  webserver:
    depends_on:
      - nginx-proxy
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80"
      - "443"
    volumes:
      - ./nginx/sites/admiapp.conf:/etc/nginx/conf.d/admiapp.conf
      - ./nginx/ssl/certs/:/etc/nginx/ssl/
      - ./alegra-proyect/:/var/www
    environment:
      - VIRTUAL_HOST=admiapp.co,www.admiapp.co
      - LETSENCRYPT_HOST=admiapp.co,www.admiapp.co
      - LETSENCRYPT_EMAIL=cesarago852@gmail.com
    networks:
      - app-network

#PHP Service
  app:
    build:
      context: ./alegra-proyect
      dockerfile: Dockerfile
    image: admiapp
    container_name: app
    restart: unless-stopped
    depends_on:
      - webserver
    tty: true
    # environment:
    #   VIRTUAL_HOST: admiapp.co
    working_dir: /var/www
    volumes:
      - ./alegra-proyect:/var/www
    networks:
      - app-network

############## End Proyecto AdmiApp ################

############## Proyecto WBdesign ################
#Nginx Service
  webserver2:
    depends_on:
      - nginx-proxy
    image: nginx:alpine
    container_name: webserver2
    restart: unless-stopped
    tty: true
    ports:
      - "80"
      - "443"
    volumes:
      - ./nginx/sites/admicom.conf:/etc/nginx/conf.d/admicom.conf
      - ./nginx/ssl/certs/:/etc/nginx/ssl/
      - ./alegra-proyect/:/var/www
    environment:
      - VIRTUAL_HOST=admiapp.com,www.admiapp.com
      - LETSENCRYPT_HOST=admiapp.com,www.admiapp.com
      - LETSENCRYPT_EMAIL=cesarago852@gmail.com
    networks:
      - app-network2

#PHP Service
  app2:
    build:
      context: ./alegra-proyect
      dockerfile: Dockerfile
    image: admiapp
    container_name: app2
    restart: unless-stopped
    depends_on:
      - webserver
    tty: true
    # environment:
    #   VIRTUAL_HOST: admiapp.co
    working_dir: /var/www
    volumes:
      - ./alegra-proyect:/var/www
    networks:
      - app-network2

############## End Proyecto AdmiApp ################

############## proyect b ######################
# nginx server www #
############# End proyect b ######################
#Volumes
volumes:
  webserver:
    driver: local
  app:
    driver: local
  nginx_proxy:
    driver: local
  letsencript:
    driver: local

#Docker Networks
networks:
  app-network:
    driver: bridge
  app-network2:
    driver: bridge
